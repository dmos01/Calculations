//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EquationBuilder {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class BuilderExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal BuilderExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EquationBuilder.BuilderExceptionMessages", typeof(BuilderExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an argument seperator not inside Log or Random..
        /// </summary>
        public static string ArgumentSeperatorNotInsideFunctionDefault {
            get {
                return ResourceManager.GetString("ArgumentSeperatorNotInsideFunctionDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An element ends with, or contains multiple, decimal points..
        /// </summary>
        public static string DecimalPointDefault {
            get {
                return ResourceManager.GetString("DecimalPointDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When &apos;E&apos; is used as log base, it must be alone..
        /// </summary>
        public static string EIsNotAloneAsLogBaseDefault {
            get {
                return ResourceManager.GetString("EIsNotAloneAsLogBaseDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  is not an integer..
        /// </summary>
        public static string ExponentIsNotIntegerAfterParameter {
            get {
                return ResourceManager.GetString("ExponentIsNotIntegerAfterParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The exponent .
        /// </summary>
        public static string ExponentIsNotIntegerBeforeParameter {
            get {
                return ResourceManager.GetString("ExponentIsNotIntegerBeforeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exponent is not an integer..
        /// </summary>
        public static string ExponentIsNotIntegerDefault {
            get {
                return ResourceManager.GetString("ExponentIsNotIntegerDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  is too large or small. Maximum size is  ±307..
        /// </summary>
        public static string ExponentTooLargeOrSmallAfterParameter {
            get {
                return ResourceManager.GetString("ExponentTooLargeOrSmallAfterParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The exponent .
        /// </summary>
        public static string ExponentTooLargeOrSmallBeforeParameter {
            get {
                return ResourceManager.GetString("ExponentTooLargeOrSmallBeforeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exponent is too large or small. Maximum size is ±307..
        /// </summary>
        public static string ExponentTooLargeOrSmallDefault {
            get {
                return ResourceManager.GetString("ExponentTooLargeOrSmallDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , is invalid..
        /// </summary>
        public static string FirstElementInvalidAfterParameter {
            get {
                return ResourceManager.GetString("FirstElementInvalidAfterParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first element, .
        /// </summary>
        public static string FirstElementInvalidBeforeParameter {
            get {
                return ResourceManager.GetString("FirstElementInvalidBeforeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first element is invalid..
        /// </summary>
        public static string FirstElementInvalidDefault {
            get {
                return ResourceManager.GetString("FirstElementInvalidDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A closing bracket was found without an equivalent opening bracket..
        /// </summary>
        public static string FoundClosingBracketWithoutOpeningBracket {
            get {
                return ResourceManager.GetString("FoundClosingBracketWithoutOpeningBracket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Functions must be followed by an opening bracket..
        /// </summary>
        public static string FunctionNotFollowedByOpeningBracket {
            get {
                return ResourceManager.GetString("FunctionNotFollowedByOpeningBracket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  is invalid when used after factorial..
        /// </summary>
        public static string InvalidCharacterAfterFactorialAfterParameter {
            get {
                return ResourceManager.GetString("InvalidCharacterAfterFactorialAfterParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string InvalidCharacterAfterFactorialBeforeParameter {
            get {
                return ResourceManager.GetString("InvalidCharacterAfterFactorialBeforeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only operators and brackets may follow factorial..
        /// </summary>
        public static string InvalidCharacterAfterFactorialDefault {
            get {
                return ResourceManager.GetString("InvalidCharacterAfterFactorialDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  is invalid before the argument separator..
        /// </summary>
        public static string InvalidCharacterBeforeArgumentSeparatorAfterParameter {
            get {
                return ResourceManager.GetString("InvalidCharacterBeforeArgumentSeparatorAfterParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string InvalidCharacterBeforeArgumentSeparatorBeforeParameter {
            get {
                return ResourceManager.GetString("InvalidCharacterBeforeArgumentSeparatorBeforeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only numbers and closing brackets can appear before the argument separator. (Seperating the numbers in Log and Random.).
        /// </summary>
        public static string InvalidCharacterBeforeArgumentSeparatorDefault {
            get {
                return ResourceManager.GetString("InvalidCharacterBeforeArgumentSeparatorDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  is invalid when used before factorial..
        /// </summary>
        public static string InvalidCharacterBeforeFactorialAfterParameter {
            get {
                return ResourceManager.GetString("InvalidCharacterBeforeFactorialAfterParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string InvalidCharacterBeforeFactorialBeforeParameter {
            get {
                return ResourceManager.GetString("InvalidCharacterBeforeFactorialBeforeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only numbers and closing brackets can appear before factorial..
        /// </summary>
        public static string InvalidCharacterBeforeFactorialDefault {
            get {
                return ResourceManager.GetString("InvalidCharacterBeforeFactorialDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  is invalid when used after E..
        /// </summary>
        public static string InvalidElementAfterEAfterParameter {
            get {
                return ResourceManager.GetString("InvalidElementAfterEAfterParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string InvalidElementAfterEBeforeParameter {
            get {
                return ResourceManager.GetString("InvalidElementAfterEBeforeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an invalid element after E..
        /// </summary>
        public static string InvalidElementAfterEDefault {
            get {
                return ResourceManager.GetString("InvalidElementAfterEDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  cannot go together..
        /// </summary>
        public static string InvalidOperatorOrderAfterParameters {
            get {
                return ResourceManager.GetString("InvalidOperatorOrderAfterParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string InvalidOperatorOrderBeforeParameters {
            get {
                return ResourceManager.GetString("InvalidOperatorOrderBeforeParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  and .
        /// </summary>
        public static string InvalidOperatorOrderBetweenParameters {
            get {
                return ResourceManager.GetString("InvalidOperatorOrderBetweenParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are two operators in a row which cannot go together..
        /// </summary>
        public static string InvalidOperatorOrderDefault {
            get {
                return ResourceManager.GetString("InvalidOperatorOrderDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , is invalid..
        /// </summary>
        public static string LastElementInvalidAfterParameter {
            get {
                return ResourceManager.GetString("LastElementInvalidAfterParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last element,.
        /// </summary>
        public static string LastElementInvalidBeforeParameter {
            get {
                return ResourceManager.GetString("LastElementInvalidBeforeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last element is invalid..
        /// </summary>
        public static string LastElementInvalidDefault {
            get {
                return ResourceManager.GetString("LastElementInvalidDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  into two numbers..
        /// </summary>
        public static string NoArgumentSeparatorAftetrParameter {
            get {
                return ResourceManager.GetString("NoArgumentSeparatorAftetrParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An argument separator is missing in Log or Random. Unable to separate .
        /// </summary>
        public static string NoArgumentSeparatorBeforeParameter {
            get {
                return ResourceManager.GetString("NoArgumentSeparatorBeforeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There must be an argument separator to separate the numbers in Log and Random..
        /// </summary>
        public static string NoArgumentSeparatorDefault {
            get {
                return ResourceManager.GetString("NoArgumentSeparatorDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter an equation..
        /// </summary>
        public static string NoEquationDefault {
            get {
                return ResourceManager.GetString("NoEquationDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all opening brackets have been closed..
        /// </summary>
        public static string NotAllOpeningBracketsClosedDefault {
            get {
                return ResourceManager.GetString("NotAllOpeningBracketsClosedDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to correctly separate the equation into elements..
        /// </summary>
        public static string SeparationFailedDefault {
            get {
                return ResourceManager.GetString("SeparationFailedDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot determine whether an &apos;E&apos; is *10^ or Euler&apos;s Number (2.718 to 3dp)..
        /// </summary>
        public static string UndeterminedUseOfEDefault {
            get {
                return ResourceManager.GetString("UndeterminedUseOfEDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;. An operator may be missing between two words or a word and number..
        /// </summary>
        public static string UnidentifiableElementAfterParameter {
            get {
                return ResourceManager.GetString("UnidentifiableElementAfterParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot recognize &quot;.
        /// </summary>
        public static string UnidentifiableElementBeforeParameter {
            get {
                return ResourceManager.GetString("UnidentifiableElementBeforeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot recognize something in the equation. An operator may be missing between two words or a word and number..
        /// </summary>
        public static string UnidentifiableElementDefault {
            get {
                return ResourceManager.GetString("UnidentifiableElementDefault", resourceCulture);
            }
        }
    }
}
