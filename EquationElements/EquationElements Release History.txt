EquationElements Release History:

Version 1.5.0:
*NumberRepresentations removed and replaced with literal.ToString().
*string.Join() used to concatenate version numbers.

Number:
*Added implicit casts for long => Number and decimal => Number.
*Equals methods made public.
*Equals(Number) checks ReferenceEquals first.
*Equals(object) and CompareTo(object) attempt to convert to Number, long, decimal and double before giving up.
* == methods check if number is null, then call their Equals().
*Rearranged files.
*Uses long (int64) instead of int because even long has a smaller range than decimal.


Version 1.4.0 - 22 July 2021:
*Added Brackets' GetNewObjectOfReverseType(), which uses GetReverseType().
*E.TestPower() tests for null.
*Expanded use of exception types.


Version 1.3.0 - 18 July 2021:
*E.TestPower() returns void.
*Functions are IMayPrecedeNegativeNumber.

Brackets:
*Added IsReverseOf(Type).
*Implementations of GetReverseSymbol() get the OperatorRepresentations symbol directly.
*Rewriten XML comments.


Version 1.2.0 - 8 July 2021:
*Added OneArgumentFunction and TwoArgumentFunction.
*E.TestPower() moved here.
*Factorial is no longer an IFunction.
*Factorial throws an exception if run on a non-integer.
*Functions are IInvalidWhenLast.
*Removed Pi.
*Removed Utils.ThrowExceptionIfNullOrEmpty().


Version 1.1.1 - 22 June 2021:
*Minor improvements.
*XML comments use "; otherwise" instead of ". Otherwise,".

Version 1.1.0 - 14 June 2021:
*new Number(string) uses IsNullEmptyOrOnlySpaces() instead of ThrowExceptionIfNullOrEmpty().
*new Word(string) no longer tests if name is an Operator or Function.


Version 1.0.0 - 31 May 2021:
*Removed to seperate out areas of responsibility:
 -Number's GetAs methods and fraction util methods. (Now NumberFormats project.)
 -ElementBuilder. (Now in EquationBuilder project.)

*Resource files to assist with localization. Elements' ToString()'s now come directly from those files.
*Increased use of State pattern (brackets, factorial, mod, root, Variable/Constant as Word).

*Number:
 -Implements IComparable and IFormattable.
 -Implements GetHashCode (on AsDouble) and Equals.
 -Overloads ++ and --.
 -Removed GetAs methods and fraction util methods.
 -Removed byte operator overloads.

*Word:
 -Enables ToString(IFormatProvider).
 -Implements IComparable and overloads Equality (based on Name).
 -Name validation prevents the same name as operators (mod and root). No longer checks if the name contains 'mod', 'root' or 'e'.


*Constants enable IFormatProvider.
*Improved file and folder arrangement. Brackets moved to within Operators.
*Moved IsFunction() to its own class.
*New IsOperator.
*Number.IsNumber() renamed to TryParse().
*Pi implements IFormattable.
*Removed Digit and Letter Elements, and PartialElement interface.
*Removed Inequality Comparers.
*Root now available as a word operator; ! now available as a factorial symbol.
*String equality now primarily uses CurrentCultureIgnoreCase.
*ToLowerAndRemoveSpaces replaced with RemoveSpaces due to IgnoreCase being used for most string comparisons. All Lower variables replaced with WithoutSpaces variables.


Relevant Beta History:

Beta 0.8.0, 14 February 2020:
*Added support for 'Variables' - words that have unknown values when building the equation, but will be known when performing the calculation.

Beta 0.7.0, 6 October 2019:
*Negative mixed-fractions now show as -(a+b/c) instead of -a-b/c.

Beta 0.6.0, 26 September 2019:
*"Legal order" fields replaced with interfaces.

Beta 0.5.0, 5 September 2019:
*Element types split into their own classes and interfaces (as of 0.6.0) so the code can use 'is' and 'switch'.
*New "Number" Element improves decimal-or-double use: if created using a double, decimal cannot be used. It also allows scientific-notation numbers to use a single NumberElement.